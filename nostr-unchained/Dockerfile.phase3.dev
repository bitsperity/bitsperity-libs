FROM node:18-alpine
WORKDIR /app

# Install system dependencies f√ºr Svelte development + Umbrel connectivity
RUN apk add --no-cache \
    git \
    python3 \
    make \
    g++ \
    curl \
    netcat-openbsd

# Copy package files
COPY package*.json ./
COPY vitest.config.ts ./
COPY vitest.phase3.config.ts ./
COPY tsconfig.json ./
COPY tsconfig.phase3.json ./

# Install dependencies
RUN npm ci

# Install Svelte-specific development tools for Phase 3
RUN npm install -D \
    @testing-library/svelte@^4.0.0 \
    @sveltejs/adapter-node@^1.0.0 \
    @sveltejs/kit@^1.0.0 \
    svelte@^4.0.0 \
    @sveltejs/vite-plugin-svelte@^2.0.0

# Install browser testing tools f√ºr multi-tab tests
RUN npm install -D \
    playwright@^1.40.0 \
    @playwright/test@^1.40.0

# Install Playwright browsers (Alpine Linux compatible)
RUN npx playwright install chromium firefox || echo "Playwright install failed, continuing without browsers"

# Create test directories
RUN mkdir -p test-results/phase3
RUN mkdir -p coverage/phase3
RUN mkdir -p src/stores
RUN mkdir -p src/__tests__/phase3

# Copy source code
COPY . .

# Create Phase 3 specific scripts
RUN echo '#!/bin/sh\n\
echo "üîç Testing Umbrel Relay connectivity..."\n\
nc -z umbrel.local 4848 && echo "‚úÖ Umbrel relay accessible" || echo "‚ùå Umbrel relay not accessible"\n\
curl -s --max-time 5 "ws://umbrel.local:4848" || echo "WebSocket test completed"\n\
' > /usr/local/bin/test-umbrel && chmod +x /usr/local/bin/test-umbrel

# Build for development
RUN npm run build

# Expose development and testing ports
EXPOSE 3000 5173 8080 8081

# Health check f√ºr store functionality + Umbrel relay
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
  CMD npm run test:health:stores && test-umbrel || exit 1

# Development command mit hot reload
CMD ["npm", "run", "dev:phase3"] 